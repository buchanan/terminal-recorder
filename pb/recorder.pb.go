// Code generated by protoc-gen-go. DO NOT EDIT.
// source: recorder.proto

package rp

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Header struct {
	Version              int32                `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Idle                 float64              `protobuf:"fixed64,3,opt,name=idle,proto3" json:"idle,omitempty"`
	Command              string               `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	Title                string               `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Env                  []byte               `protobuf:"bytes,6,opt,name=env,proto3" json:"env,omitempty"`
	Theme                []byte               `protobuf:"bytes,7,opt,name=theme,proto3" json:"theme,omitempty"`
	Host                 string               `protobuf:"bytes,8,opt,name=host,proto3" json:"host,omitempty"`
	Username             string               `protobuf:"bytes,9,opt,name=username,proto3" json:"username,omitempty"`
	Terminal             *Terminal            `protobuf:"bytes,10,opt,name=terminal,proto3" json:"terminal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_b063ffe85a4e6395, []int{0}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Header) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Header) GetIdle() float64 {
	if m != nil {
		return m.Idle
	}
	return 0
}

func (m *Header) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *Header) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Header) GetEnv() []byte {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Header) GetTheme() []byte {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *Header) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Header) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Header) GetTerminal() *Terminal {
	if m != nil {
		return m.Terminal
	}
	return nil
}

type Terminal struct {
	Offset               int64    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Width                uint32   `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height               uint32   `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Terminal) Reset()         { *m = Terminal{} }
func (m *Terminal) String() string { return proto.CompactTextString(m) }
func (*Terminal) ProtoMessage()    {}
func (*Terminal) Descriptor() ([]byte, []int) {
	return fileDescriptor_b063ffe85a4e6395, []int{1}
}

func (m *Terminal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Terminal.Unmarshal(m, b)
}
func (m *Terminal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Terminal.Marshal(b, m, deterministic)
}
func (m *Terminal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Terminal.Merge(m, src)
}
func (m *Terminal) XXX_Size() int {
	return xxx_messageInfo_Terminal.Size(m)
}
func (m *Terminal) XXX_DiscardUnknown() {
	xxx_messageInfo_Terminal.DiscardUnknown(m)
}

var xxx_messageInfo_Terminal proto.InternalMessageInfo

func (m *Terminal) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Terminal) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Terminal) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type Key struct {
	Offset               int64    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Input                bool     `protobuf:"varint,3,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_b063ffe85a4e6395, []int{2}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

func (m *Key) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Key) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Key) GetInput() bool {
	if m != nil {
		return m.Input
	}
	return false
}

type Command struct {
	Line                 string               `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
	Input                bool                 `protobuf:"varint,2,opt,name=input,proto3" json:"input,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Keystrokes           []*Key               `protobuf:"bytes,4,rep,name=keystrokes,proto3" json:"keystrokes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_b063ffe85a4e6395, []int{3}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetLine() string {
	if m != nil {
		return m.Line
	}
	return ""
}

func (m *Command) GetInput() bool {
	if m != nil {
		return m.Input
	}
	return false
}

func (m *Command) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Command) GetKeystrokes() []*Key {
	if m != nil {
		return m.Keystrokes
	}
	return nil
}

type RecordMessage struct {
	// Types that are valid to be assigned to Record:
	//	*RecordMessage_Header
	//	*RecordMessage_Terminal
	//	*RecordMessage_Command
	//	*RecordMessage_Key
	Record               isRecordMessage_Record `protobuf_oneof:"record"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RecordMessage) Reset()         { *m = RecordMessage{} }
func (m *RecordMessage) String() string { return proto.CompactTextString(m) }
func (*RecordMessage) ProtoMessage()    {}
func (*RecordMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_b063ffe85a4e6395, []int{4}
}

func (m *RecordMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecordMessage.Unmarshal(m, b)
}
func (m *RecordMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecordMessage.Marshal(b, m, deterministic)
}
func (m *RecordMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecordMessage.Merge(m, src)
}
func (m *RecordMessage) XXX_Size() int {
	return xxx_messageInfo_RecordMessage.Size(m)
}
func (m *RecordMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RecordMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RecordMessage proto.InternalMessageInfo

type isRecordMessage_Record interface {
	isRecordMessage_Record()
}

type RecordMessage_Header struct {
	Header *Header `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type RecordMessage_Terminal struct {
	Terminal *Terminal `protobuf:"bytes,2,opt,name=terminal,proto3,oneof"`
}

type RecordMessage_Command struct {
	Command *Command `protobuf:"bytes,3,opt,name=command,proto3,oneof"`
}

type RecordMessage_Key struct {
	Key *Key `protobuf:"bytes,4,opt,name=key,proto3,oneof"`
}

func (*RecordMessage_Header) isRecordMessage_Record() {}

func (*RecordMessage_Terminal) isRecordMessage_Record() {}

func (*RecordMessage_Command) isRecordMessage_Record() {}

func (*RecordMessage_Key) isRecordMessage_Record() {}

func (m *RecordMessage) GetRecord() isRecordMessage_Record {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *RecordMessage) GetHeader() *Header {
	if x, ok := m.GetRecord().(*RecordMessage_Header); ok {
		return x.Header
	}
	return nil
}

func (m *RecordMessage) GetTerminal() *Terminal {
	if x, ok := m.GetRecord().(*RecordMessage_Terminal); ok {
		return x.Terminal
	}
	return nil
}

func (m *RecordMessage) GetCommand() *Command {
	if x, ok := m.GetRecord().(*RecordMessage_Command); ok {
		return x.Command
	}
	return nil
}

func (m *RecordMessage) GetKey() *Key {
	if x, ok := m.GetRecord().(*RecordMessage_Key); ok {
		return x.Key
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RecordMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RecordMessage_Header)(nil),
		(*RecordMessage_Terminal)(nil),
		(*RecordMessage_Command)(nil),
		(*RecordMessage_Key)(nil),
	}
}

func init() {
	proto.RegisterType((*Header)(nil), "rp.Header")
	proto.RegisterType((*Terminal)(nil), "rp.Terminal")
	proto.RegisterType((*Key)(nil), "rp.Key")
	proto.RegisterType((*Command)(nil), "rp.Command")
	proto.RegisterType((*RecordMessage)(nil), "rp.RecordMessage")
}

func init() { proto.RegisterFile("recorder.proto", fileDescriptor_b063ffe85a4e6395) }

var fileDescriptor_b063ffe85a4e6395 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xcd, 0x8a, 0xdb, 0x30,
	0x10, 0x8e, 0x7f, 0xe2, 0x38, 0x93, 0xa4, 0x2c, 0xa2, 0x14, 0x91, 0x1e, 0x6a, 0x4c, 0x61, 0x4d,
	0x0f, 0x5e, 0x48, 0x2f, 0x3d, 0xb7, 0x14, 0x0c, 0x4b, 0xa1, 0x88, 0x7d, 0x01, 0xef, 0x7a, 0x12,
	0x9b, 0xd8, 0x96, 0x91, 0x95, 0x2d, 0x79, 0x91, 0x3e, 0x40, 0xdf, 0xa0, 0x6f, 0x58, 0x34, 0xb2,
	0xe3, 0x94, 0xd2, 0xc3, 0xde, 0xe6, 0xfb, 0xf4, 0xcd, 0x67, 0xe9, 0x9b, 0x31, 0xbc, 0x52, 0xf8,
	0x24, 0x55, 0x81, 0x2a, 0xed, 0x94, 0xd4, 0x92, 0xb9, 0xaa, 0xdb, 0xbe, 0x3b, 0x48, 0x79, 0xa8,
	0xf1, 0x8e, 0x98, 0xc7, 0xd3, 0xfe, 0x4e, 0x57, 0x0d, 0xf6, 0x3a, 0x6f, 0x3a, 0x2b, 0x8a, 0x7f,
	0xb9, 0x10, 0x64, 0x98, 0x17, 0xa8, 0x18, 0x87, 0xc5, 0x33, 0xaa, 0xbe, 0x92, 0x2d, 0x77, 0x22,
	0x27, 0x99, 0x8b, 0x11, 0xb2, 0x4f, 0xb0, 0xbc, 0xf4, 0x71, 0x37, 0x72, 0x92, 0xd5, 0x6e, 0x9b,
	0x5a, 0xe7, 0x74, 0x74, 0x4e, 0x1f, 0x46, 0x85, 0x98, 0xc4, 0x8c, 0x81, 0x5f, 0x15, 0x35, 0x72,
	0x2f, 0x72, 0x12, 0x47, 0x50, 0x6d, 0xbe, 0xf3, 0x24, 0x9b, 0x26, 0x6f, 0x0b, 0xee, 0x47, 0x4e,
	0xb2, 0x14, 0x23, 0x64, 0xaf, 0x61, 0xae, 0x2b, 0x5d, 0x23, 0x9f, 0x13, 0x6f, 0x01, 0xbb, 0x01,
	0x0f, 0xdb, 0x67, 0x1e, 0x44, 0x4e, 0xb2, 0x16, 0xa6, 0x24, 0x5d, 0x89, 0x0d, 0xf2, 0x05, 0x71,
	0x16, 0x98, 0x6f, 0x95, 0xb2, 0xd7, 0x3c, 0xa4, 0x66, 0xaa, 0xd9, 0x16, 0xc2, 0x53, 0x8f, 0xaa,
	0xcd, 0x1b, 0xe4, 0x4b, 0xe2, 0x2f, 0x98, 0x25, 0x10, 0x6a, 0x54, 0x4d, 0xd5, 0xe6, 0x35, 0x07,
	0x7a, 0xd4, 0x3a, 0x55, 0x5d, 0xfa, 0x30, 0x70, 0xe2, 0x72, 0x1a, 0x7f, 0x87, 0x70, 0x64, 0xd9,
	0x1b, 0x08, 0xe4, 0x7e, 0xdf, 0xa3, 0xa6, 0x90, 0x3c, 0x31, 0x20, 0x73, 0xa7, 0x1f, 0x55, 0xa1,
	0x4b, 0xca, 0x67, 0x23, 0x2c, 0x30, 0xea, 0x12, 0xab, 0x43, 0xa9, 0x29, 0x81, 0x8d, 0x18, 0x50,
	0xfc, 0x15, 0xbc, 0x7b, 0x3c, 0xff, 0xd7, 0xec, 0x06, 0xbc, 0x23, 0x9e, 0xc9, 0x6a, 0x2d, 0x4c,
	0x69, 0xec, 0xab, 0xb6, 0x3b, 0x59, 0x9f, 0x50, 0x58, 0x10, 0xff, 0x74, 0x60, 0xf1, 0x65, 0x08,
	0x8f, 0x81, 0x5f, 0x57, 0x2d, 0x92, 0xd3, 0x52, 0x50, 0x3d, 0x75, 0xb9, 0x57, 0x5d, 0x7f, 0x8f,
	0xd3, 0x7b, 0xc9, 0x38, 0x6f, 0x01, 0x8e, 0x78, 0xee, 0xb5, 0x92, 0x47, 0xec, 0xb9, 0x1f, 0x79,
	0xc9, 0x6a, 0xb7, 0x30, 0xa1, 0xdd, 0xe3, 0x59, 0x5c, 0x1d, 0xc5, 0xbf, 0x1d, 0xd8, 0x08, 0x5a,
	0xc7, 0x6f, 0xd8, 0xf7, 0xf9, 0x01, 0xd9, 0x7b, 0x93, 0x84, 0xd9, 0x33, 0xba, 0xe0, 0x6a, 0x07,
	0xa6, 0xcd, 0x6e, 0x5e, 0x36, 0x13, 0xc3, 0x19, 0xfb, 0x70, 0x35, 0x13, 0xf7, 0xdf, 0x99, 0x64,
	0xb3, 0x69, 0x2a, 0xec, 0x76, 0xda, 0x23, 0xfb, 0x88, 0x95, 0x91, 0x0e, 0x71, 0x64, 0xb3, 0x69,
	0xad, 0xde, 0xda, 0x34, 0x7d, 0x12, 0x8d, 0xd7, 0xcd, 0x66, 0x14, 0xec, 0xe7, 0x10, 0x02, 0xfb,
	0xdf, 0x3c, 0x06, 0xf4, 0xf6, 0x8f, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xde, 0x9c, 0x40, 0xe6,
	0x48, 0x03, 0x00, 0x00,
}
